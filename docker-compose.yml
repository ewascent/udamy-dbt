version: "3.9"

networks:
  local:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
services:
  dbt:
    build:
      context: .
      dockerfile: docker/Dockerfile.dbt
    volumes:
      - type: bind
        source: ./dbt/learn_dbt
        target: /usr/local/dbt/learn_dbt
    networks:
      local:
        aliases:
          - dbt-host    
  smtp:
    image: reachfive/fake-smtp-server:latest
    ports:
      - "1025:1025" # smtp port
      - "1080:1080" # web interface
    networks:
      local:
        aliases:
          - smtp-host
  redis:
    image: redis:5.0.5
    networks:
      local:
        ipv4_address: 172.28.1.4
  postgres:
    image: postgres:11.2
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - "5432:5432"
    volumes:
      - ./docker/postgresql_initdb:/docker-entrypoint-initdb.d
      - airflow-data-volume:/var/lib/postgresql:delegated
    networks:
      local:
        ipv4_address: 172.28.1.3

  localstack:
    build:
      context: .
      dockerfile: docker/Dockerfile.localstack
    ports:
      - "4572:4572" # to expose S3 locally
    environment:
      - SERVICES=s3
      - DEFAULT_REGION=us-west-2
      - HOSTNAME_EXTERNAL=localstack
      - HOSTNAME=localstack
    volumes:
      - ./docker/localstack_init:/docker-entrypoint-initaws.d
    networks:
      local:
        ipv4_address: 172.28.1.2
  airflow:
    build:
      context: .
      dockerfile: docker/Dockerfile.airflow
    volumes:
      - type: bind
        source: ./dags
        target: /usr/local/airflow/dags
      - type: bind
        source: ./src
        target: /usr/local/airflow/src
      - type: bind
        source: ./tests
        target: /usr/local/airflow/tests
      - type: bind
        source: ./.flake8
        target: /usr/local/airflow/.flake8
    restart: always
    depends_on:
      - postgres
      - redis
      - smtp
    ports:
      - "8080:8080"
    command: webserver
    environment:
      - AIRFLOW_HOME=/usr/local/airflow
      - AIRFLOW__CORE__FERNET_KEY='Yp75xtW2_oXj2WaqPYNCAnVV4t9l2S68NvfSpdeXLKs='
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__PLUGINS_FOLDER=/usr/local/airflow/src
      - AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
      - AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      - AWS_DEFAULT_REGION=us-west-2
      - DB_PASSWORD=airflow
      - EXECUTOR=Local
      - FERNET_KEY='R9e68ii2EumFon7aZ7BlCUH80w8hHYTzjeEwBrFR6yg='
      - AIRFLOW__CORE__FERNET_KEY='R9e68ii2EumFon7aZ7BlCUH80w8hHYTzjeEwBrFR6yg='
      - LOAD_EX=n
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      - PYTHONPATH=/usr/local/airflow
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
      - S3_SERVER_HOST=http://172.28.1.2:4572
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      local:
        ipv4_address: 172.28.1.7
volumes:
  airflow-data-volume:
